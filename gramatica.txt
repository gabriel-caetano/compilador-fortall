Gramática escrita

<PROG>		    -> <COMENTARIO> programa id; <DECLARACOES> inicio <COMANDOS> fim . <COMENTARIO>
<DECLARACOES>	-> <COMENTARIO> var <IDS> : <TIPO> ; <DECLARACOES> | <COMENTARIO>
<TIPO>		    -> inteiro | logico
<COMANDOS>	    -> <COMENTARIO> <COMANDO> ; <COMANDOS> | <COMENTARIO>
<COMANDO>	    -> <ATRIBUICOES> | <LEITURA> | <ESCRITA> | <COMPOSTO> | <CONDICIONAL> | <REPETICAO>
<ATRIBUICOES>	-> id := <EXPR>
<LEITURA>	    -> Ler(id)
<ESCRITA>       -> Escrever ( <ESPR_STR> )
<ESPR_STR>      -> <ITEM_ESCRITA> <ESPR_STR_>
<ESPR_STR_>     -> , <ITEM_ESCRITA> <ESPR_STR_> | ε
<ITEM_ESCRITA>  -> <EXPR> | <EXPR_LOGICA> | str | id
<COMPOSTO>	    -> inicio <COMANDOS> fim
<CONDICIONAL>	-> se <EXPR_LOGICA> entao <COMANDOS> se nao <COMANDOS> | se <EXPR_LOGICA> entao <COMANDOS>
<REPETICAO>	    -> enquanto <EXPR_LOGICA> faca <COMANDOS>
<IDS>           -> id <_IDS>
<_IDS>		    -> , id <_IDS> | ε
<EXPR>          -> <TERMO> <_EXPR>
<_EXPR>		    -> + <TERMO> <_EXPR> | - <TERMO> <_EXPR> | ε
<TERMO>         -> <FATOR> <_TERMO>
<_TERMO>        -> * <FATOR> <_TERMO> | / <FATOR> <_TERMO> | ε
<FATOR>         -> - <FATOR> | <VALUE>
<VALUE>         -> num | - num | (<EXPR>)
<EXPR_LOGICA>   -> <EXPR> < <EXPR> | <EXPR> <= <EXPR> | <EXPR> > <EXPR> | <EXPR> >= <EXPR> | <EXPR> = <EXPR> | <EXPR> <> <EXPR> | id
<_COMENTARIO> -> /* <QUALQUER_COISA...> */
<COMENTARIO>   -> <_COMENTARIO> <COMENTARIO> | ε
